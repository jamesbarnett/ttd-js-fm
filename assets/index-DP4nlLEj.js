var m=Object.defineProperty;var h=(t,r,e)=>r in t?m(t,r,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[r]=e;var u=(t,r,e)=>h(t,typeof r!="symbol"?r+"":r,e);(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))n(o);new MutationObserver(o=>{for(const a of o)if(a.type==="childList")for(const s of a.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&n(s)}).observe(document,{childList:!0,subtree:!0});function e(o){const a={};return o.integrity&&(a.integrity=o.integrity),o.referrerPolicy&&(a.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?a.credentials="include":o.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function n(o){if(o.ep)return;o.ep=!0;const a=e(o);fetch(o.href,a)}})();const p=["daily","weekly","monthly"],g=new Map([["daily","Yesterday"],["weekly","Last Week"],["monthly","Last Month"]]);class w{constructor(r){u(this,"find",function(r){return this.categories.find(e=>e.title===r)});this.categories=r}}function v(t){return t.toLowerCase().replace(" ","-")}function f(t){document.getElementById(t).classList.add("active"),document.querySelectorAll(`p[data-breakdown-type=${t}]`).forEach(e=>{e.style.display="block"}),p.filter(e=>e!==t).forEach(e=>{document.querySelectorAll(`p[data-breakdown-type=${e}]`).forEach(n=>{n.style.display="none"}),document.getElementById(e).classList.remove("active")})}const E=document.querySelectorAll("nav > ul > li > a");E.forEach(t=>{t.onclick=()=>(f(`${t.innerText.toLowerCase()}`),!1)});function L(){const t=new Headers;t.append("Content-Type","application/json");const r=new RegExp("localhost"),e="assets/data.json";r.test(e)||(e="/"+e),fetch(e,{headers:t}).then(n=>{if(!n.ok){console.log("Failed to load /data.json");return}return n.json()}).then(n=>(console.log(`Did we get anything? ${n||"no"}`),new w(n))).then(n=>{const o=["Work","Play","Study","Exercise","Social","Self Care"];new Map(o.map(s=>[v(s),n.find(s)])).forEach((s,y,b)=>{const d=document.querySelector(`[data-category="${y}"]`).querySelector(".category-wrapper");d.querySelector("h2"),p.forEach(c=>{const i=document.createElement("p"),l=document.createElement("p");i.setAttribute("data-breakdown-type",c),l.setAttribute("data-breakdown-type",c),i.setAttribute("data-period","current"),l.setAttribute("data-period","previous"),i.innerText=`${s.timeframes[c].current}hrs`,l.innerText=`${g.get(c)} - ${s.timeframes[c].previous}hrs`,d.appendChild(i),d.appendChild(l)})}),f("weekly")})}L();
